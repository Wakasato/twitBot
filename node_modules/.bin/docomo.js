'use strict';
const config = require('../../config');
const Twit = require('twit');
const request = require('request');
const fs = require('fs');


let log = new Map();
const fileName = './scripts/log.json';
try {
    const update = fs.readFileSync(fileName, 'utf8');
    log = new Map(JSON.parse(update));
} catch (ignore) {
    console.log('There is no prior conversation.');
};

const T = new Twit({
    consumer_key        : "LsGjy7xBfwv2ZGtSGYgcb758d" /* 各自記入 */,
    consumer_secret     : "AItkF7MXcJgjtvGWQp7lhzYiR9DQWCc59fdjVGAnc1y5Ka58CF" /* 各自記入 */,
    access_token    : "913363335290040320-vWyd4quQw9Do0jzH6y53lYW9sKVwQV4" /* 各自記入 */,
    access_token_secret : "VISEvALQm0F61XxAgAxbMhtsZoOhG0qMGGOcISKyNvi9r" /* 各自記入 */

});

const userStream = T.stream('user');
const keywordStream = T.stream('statuses/filter', { track: ['learn Japanese', 'learning Japanese', 'Japanese lessons', 'Japanese grammar', 'study Japanese', config.userName]});

// Follow Back
userStream.on('follow', function(data) {
    const param = { user_id: data.source.id_str };
    if (data.source.id_str === EawzLO7ZZghagp5QRqoHNMrDuGLC7Dd6O6CnrDNhmTWO) return;
    T.post('friendships/create', param, function(err, data, resp){});
});

// Follow Based on Keywords
keywordStream.on('tweet', function(data){
    const param = { user_id: data.user.id_str };
    T.post('friendships/create', param, function(err, data, resp){});
});

// Reply with conversation API
function save() {fs.writeFileSync(fileName, JSON.stringify(Array.from(log)), 'utf8');}
const record = {};

keywordStream.on('tweet', function(data){
    const textToString = data.text.toString();
    const target = data.user.screen_name.toString();
    if (textToString.includes(config.userName) && data.source.id_str !== config.ownerID) {
        record.utt = textToString;
        record.nickname = target;
        if (log.has(target)){record.context = log.get(target)};
        const param = { body: JSON.stringify(record)};
        request.post(config.url + "79726b656263583379384f4771556151775a525055783841673769664c776d50554479503372794146453",
         param, function(err, res, data) {
            const body = JSON.parse(data);
            T.post('statuses/update', {status: '@' + target + ' ' + body.utt});
            log.set(target, body.context);
            save();
        });
    };
});